/assets/record:
  post:
    # security:
    # - Bearer: []
    summary: api to record/update an uploaded asset.
    tags:
    - Assets
    description: this is usually called after uploading an asset to aws and to update an asset
    parameters:
    - name: X-Requested-With
      description: set value to XMLHttpRequest if you are making an xhr request
      in: header
      required: true
      default: XMLHttpRequest
    - name: Body
      in: body
      required: true
      schema:
        type: object
        required:
        properties:
          _id:
            type: string
            description: "id of the asset. **If present, the op will be update. Else create**"
            example: 5b4f0845b48361468f85033c
          title:
            type: string
            description: asset name
            example: cato
          description:
            type: string
            example: lorem ipsium doller sit
          categoryId:
            type: string
            example: 5b4f0845b48361468f85033c
          subCategoryId:
            type: string
            example: 5b4f0845b48361468f85033c
          stage:
            type: string
            example: stage 5
          type:
            type: string
            example: mango
          industryId:
            type: string
            example: 5b4f0845b48361468f85033c
          businessFunctionId:
            type: string
            example: 5b4f0845b48361468f85033c
          businessSubFunctionId:
            type: string
            example: 5b4f0845b48361468f85033c
          imageAccessUrl:
            type: string
            example: 'https://img.url/png'
          fileAccessUrls:
            type: array
            example: ['https://fileAccess.url/pdf','https://fileAccess.url/anything']
          technologyPlatform:
            type: string
            example: ng/node
          fileName:
            type: string
            example: tiger
          lang:
            type: string
            example: EN
            description: language
          format:
            type: string
            example: '.png'
          size:
            type: string
            example: '38'
          coAuthor:
            type: string
            example: 'someone@funevent.net'
          userId:
            type: string
            example: '5b4f0845b48361468f85033c'
            description: "if `userId` is given, it will be used. Else `userId` from token will be used"
        
    responses:
      201:
        description: "successful attempt, returns `success message`"